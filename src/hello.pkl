// Why? Safe, Reusable, Productive
// Also: IDE, As-a-Library, Lang Bindings, Modern but Constrained

//import "pkl:semver"
//import "helpers.pkl"

// Declarative


// many output formats
// pkl eval -f yaml -o hello.yaml hello.pkl
// pkl eval -f json -o hello.json hello.pkl

// Types


// Type Constraints


// Schemas / Classes


// Comments

/*
  multi
  line
*/

// Comment Docs


// Type Aliases


// Enums


// Objects


// Templates


// Lists, Maps, Sets

  // listings (with local)

  // for in loops

  // mappings

  // sets

  // if expression


// Reusability

  // functions

  // functors

  // validation

  // libraries local

  // std-lib
  // https://pkl-lang.org/package-docs/pkl/0.26.2/base/index.html

  // RegEx, Durations, helper functions
  // https://pkl-lang.org/package-docs/pkl/0.26.2/

  // durations

  // str

  // semver
